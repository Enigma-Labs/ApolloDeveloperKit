#!/bin/bash

# Do almost the same thing as Carthage but don't make a fat binary.

show_help() {
    cat <<-EOS
Usage: quick-install-dependencies [-h] [-f] <SDK>

Options:
    -h, --help   Show this help and exit
    -f, --force  Force build ignoring cache

Arguments:
    SDK          Specify SDK to build (macosx|iphoneos|iphonesimulator)
EOS
}

if [ $# -eq 0 -o $# -gt 2 ]; then
    echo "error: wrong number of arguments ($# for 1..2)." >&2
    show_help >&2
    exit 1
fi
force=0
sdk=
carthage_root=
release_dir=
while [ $# -gt 0 ]
do
    case "$1" in
        -h|--help)
            show_help
            exit
            ;;
        -f|--force)
            force=1
            shift
            ;;
        macosx)
            sdk=macosx
            carthage_root=Carthage/Build/Mac
            release_dir=Release
            shift
            ;;
        iphoneos)
            sdk=iphoneos
            carthage_root=Carthage/Build/iOS
            release_dir=Release-iphoneos
            shift
            ;;
        iphonesimulator)
            sdk=iphonesimulator
            carthage_root=Carthage/Build/iOS
            release_dir=Release-iphonesimulator
            shift
            ;;
        '')
            ;;
        *)
            echo "error: invalid argument '$1'." >&2
            show_help >&2
            exit 1
            ;;
    esac
done
if [ -z "$sdk" ]; then
    echo "error: wrong number of arguments ($# for 1..2)." >&2
    show_help >&2
    exit 1
fi

if [ $force -eq 0 -a -f "$carthage_root/Apollo.framework/Apollo" ]; then
    echo 'Valid cache found.' >&2
    exit
fi

carthage checkout apollo-ios

derived_data_path="$TMPDIR/DerivedData/Apollo"

mkdir -p "$derived_data_path"
trap "rm -rf '$derived_data_path'" EXIT

xcodebuild build \
    -project Carthage/Checkouts/apollo-ios/Apollo.xcodeproj \
    -scheme Apollo \
    -configuration Release \
    -derivedDataPath "$derived_data_path" \
    -sdk "$sdk" \
    -quiet \
    ONLY_ACTIVE_ARCH=NO \
    CODE_SIGNING_REQUIRED=NO \
    CODE_SIGN_IDENTITY= \
    CARTHAGE=YES

rm -rf "$carthage_root"
mkdir -p "$carthage_root"
mv "$TMPDIR/DerivedData/Apollo/Build/Products/$release_dir/Apollo.framework" "$carthage_root"
